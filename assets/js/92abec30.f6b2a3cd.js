"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[38154],{71184:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(14041);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},94665:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"cli/start","title":"Start Command","description":"Launch and manage ElizaOS projects and agents in production mode","source":"@site/docs/cli/start.md","sourceDirName":"cli","slug":"/cli/start","permalink":"/docs/cli/start","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/cli/start.md","tags":[],"version":"current","lastUpdatedBy":"Christopher Trimboli","lastUpdatedAt":1749078171000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Start Command","description":"Launch and manage ElizaOS projects and agents in production mode","keywords":["start","production","deployment","configuration","runtime","services","agents"],"image":"/img/cli.jpg"},"sidebar":"tutorialSidebar","previous":{"title":"Publish","permalink":"/docs/cli/publish"},"next":{"title":"Test","permalink":"/docs/cli/test"}}');var r=s(31085),t=s(71184);const a={sidebar_position:3,title:"Start Command",description:"Launch and manage ElizaOS projects and agents in production mode",keywords:["start","production","deployment","configuration","runtime","services","agents"],image:"/img/cli.jpg"},l="Start Command",o={},c=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Character Configuration",id:"character-configuration",level:3},{value:"Advanced Configurations",id:"advanced-configurations",level:3},{value:"Character File Formats",id:"character-file-formats",level:2},{value:"Local Files",id:"local-files",level:3},{value:"Remote URLs",id:"remote-urls",level:3},{value:"Multiple Characters",id:"multiple-characters",level:3},{value:"Production Features",id:"production-features",level:2},{value:"Startup Process",id:"startup-process",level:2},{value:"Project Detection",id:"project-detection",level:2},{value:"Configuration Management",id:"configuration-management",level:2},{value:"Default Configuration",id:"default-configuration",level:3},{value:"Force Reconfiguration",id:"force-reconfiguration",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"From .env File",id:"from-env-file",level:3},{value:"Direct Environment Variables",id:"direct-environment-variables",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Character Loading Errors",id:"character-loading-errors",level:3},{value:"Service Connection Errors",id:"service-connection-errors",level:3},{value:"Port Management",id:"port-management",level:2},{value:"Default Port",id:"default-port",level:3},{value:"Custom Port",id:"custom-port",level:3},{value:"Build Process",id:"build-process",level:2},{value:"Automatic Building",id:"automatic-building",level:3},{value:"When to Use --build",id:"when-to-use---build",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Bun Installation Issues",id:"bun-installation-issues",level:3},{value:"Startup Failures",id:"startup-failures",level:3},{value:"Port Conflicts",id:"port-conflicts",level:3},{value:"Character Loading Issues",id:"character-loading-issues",level:3},{value:"Configuration Problems",id:"configuration-problems",level:3},{value:"Build Failures",id:"build-failures",level:3},{value:"Service Connection Issues",id:"service-connection-issues",level:3},{value:"Production Deployment",id:"production-deployment",level:2},{value:"Best Practices",id:"best-practices",level:3},{value:"Health Checks",id:"health-checks",level:3},{value:"Related Commands",id:"related-commands",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"start-command",children:"Start Command"})}),"\n",(0,r.jsx)(n.p,{children:"Start the Eliza agent with configurable plugins and services."}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"elizaos start [options]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-c, --configure"})}),(0,r.jsx)(n.td,{children:"Force reconfiguration of services and AI models (bypasses saved configuration)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-char, --character [paths...]"})}),(0,r.jsx)(n.td,{children:"Character file(s) to use - accepts paths or URLs"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-b, --build"})}),(0,r.jsx)(n.td,{children:"Build the project before starting"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-p, --port <port>"})}),(0,r.jsx)(n.td,{children:"Port to listen on (default: 3000)"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start with default configuration\nelizaos start\n\n# Start on custom port\nelizaos start --port 8080\n\n# Build project before starting\nelizaos start --build\n\n# Force reconfiguration\nelizaos start --configure\n"})}),"\n",(0,r.jsx)(n.h3,{id:"character-configuration",children:"Character Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Start with single character file\nelizaos start --character ./character.json\n\n# Start with multiple character files\nelizaos start --character ./char1.json ./char2.json\n\n# Mix local files and URLs\nelizaos start --character ./local.json https://example.com/remote.json\n\n# Character files without .json extension\nelizaos start --character assistant support-bot\n\n# Comma-separated format also works\nelizaos start --character "char1.json,char2.json"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"advanced-configurations",children:"Advanced Configurations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Build and configure before starting\nelizaos start --build --configure\n\n# Start with specific character on custom port\nelizaos start --character ./my-bot.json --port 4000\n\n# Complete setup for production deployment\nelizaos start --character ./production-bot.json --port 3000 --build\n"})}),"\n",(0,r.jsx)(n.h2,{id:"character-file-formats",children:"Character File Formats"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"--character"})," option supports various input formats:"]}),"\n",(0,r.jsx)(n.h3,{id:"local-files",children:"Local Files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Absolute paths\nelizaos start --character /path/to/character.json\n\n# Relative paths\nelizaos start --character ./characters/bot.json\n\n# Without .json extension (auto-added)\nelizaos start --character my-character\n"})}),"\n",(0,r.jsx)(n.h3,{id:"remote-urls",children:"Remote URLs"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Direct HTTPS URLs\nelizaos start --character https://example.com/characters/assistant.json\n\n# Multiple remote characters\nelizaos start --character https://site1.com/bot1.json https://site2.com/bot2.json\n"})}),"\n",(0,r.jsx)(n.h3,{id:"multiple-characters",children:"Multiple Characters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Space-separated\nelizaos start --character char1.json char2.json char3.json\n\n# Comma-separated\nelizaos start --character "char1.json,char2.json,char3.json"\n\n# Mixed formats\nelizaos start --character ./local.json https://remote.com/char.json assistant\n'})}),"\n",(0,r.jsx)(n.h2,{id:"production-features",children:"Production Features"}),"\n",(0,r.jsxs)(n.p,{children:["When you run ",(0,r.jsx)(n.code,{children:"start"}),", ElizaOS provides production-ready features:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimized Performance"}),": Runs with production optimizations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stable Configuration"}),": Uses saved configuration by default"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service Management"}),": Handles service connections and disconnections"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Recovery"}),": Automatic recovery from transient errors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Management"}),": Efficient resource allocation and cleanup"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"startup-process",children:"Startup Process"}),"\n",(0,r.jsxs)(n.p,{children:["When you run the ",(0,r.jsx)(n.code,{children:"start"})," command, ElizaOS:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Project Detection"}),": Detects whether you're in a project or plugin directory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration Loading"}),": Loads and validates the configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database Initialization"}),": Initializes the database system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Plugin Loading"}),": Loads required plugins"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service Startup"}),": Starts any configured services"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Knowledge Processing"}),": Processes knowledge files if present"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API Server"}),": Starts the HTTP API server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Agent Runtime"}),": Initializes agent runtimes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Listening"}),": Begins listening for messages and events"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"project-detection",children:"Project Detection"}),"\n",(0,r.jsx)(n.p,{children:"ElizaOS automatically detects the type of directory you're in and adjusts its behavior accordingly:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ElizaOS Projects"}),": Loads project configuration and starts defined agents"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ElizaOS Plugins"}),": Runs in plugin test mode with the default character"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Other Directories"}),": Uses the default Eliza character"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,r.jsx)(n.h3,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Uses saved configuration from previous runs"}),"\n",(0,r.jsxs)(n.li,{children:["Loads environment variables from ",(0,r.jsx)(n.code,{children:".env"})," file"]}),"\n",(0,r.jsx)(n.li,{children:"Applies project-specific settings"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"force-reconfiguration",children:"Force Reconfiguration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Bypass saved configuration and reconfigure all services\nelizaos start --configure\n"})}),"\n",(0,r.jsx)(n.p,{children:"This is useful when:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You've changed API keys or service credentials"}),"\n",(0,r.jsx)(n.li,{children:"You want to select different AI models"}),"\n",(0,r.jsx)(n.li,{children:"Service configurations have changed"}),"\n",(0,r.jsx)(n.li,{children:"Troubleshooting configuration issues"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"start"})," command automatically loads environment variables:"]}),"\n",(0,r.jsx)(n.h3,{id:"from-env-file",children:"From .env File"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# ElizaOS looks for .env in the project directory\ncd my-project\nelizaos start  # Loads from ./my-project/.env\n"})}),"\n",(0,r.jsx)(n.h3,{id:"direct-environment-variables",children:"Direct Environment Variables"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Set variables directly\nOPENAI_API_KEY=your-key elizaos start\n\n# Multiple variables\nOPENAI_API_KEY=key1 DISCORD_TOKEN=token1 elizaos start\n"})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"character-loading-errors",children:"Character Loading Errors"}),"\n",(0,r.jsx)(n.p,{children:"If character files fail to load, ElizaOS will:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Log Errors"}),": Display detailed error messages for each failed character"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Continue Starting"}),": Use any successfully loaded characters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fallback"}),": Use the default Eliza character if no characters load successfully"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"service-connection-errors",children:"Service Connection Errors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automatic retry for transient connection issues"}),"\n",(0,r.jsx)(n.li,{children:"Graceful degradation when optional services are unavailable"}),"\n",(0,r.jsx)(n.li,{children:"Error logging with recovery suggestions"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"port-management",children:"Port Management"}),"\n",(0,r.jsx)(n.h3,{id:"default-port",children:"Default Port"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default: ",(0,r.jsx)(n.code,{children:"3000"})]}),"\n",(0,r.jsx)(n.li,{children:"Automatically detects if port is in use"}),"\n",(0,r.jsx)(n.li,{children:"Suggests alternative ports if default is unavailable"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"custom-port",children:"Custom Port"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Specify custom port\nelizaos start --port 8080\n\n# Check if port is available first\nnetstat -an | grep :8080\nelizaos start --port 8080\n"})}),"\n",(0,r.jsx)(n.h2,{id:"build-process",children:"Build Process"}),"\n",(0,r.jsx)(n.h3,{id:"automatic-building",children:"Automatic Building"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Build before starting (recommended for production)\nelizaos start --build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"when-to-use---build",children:"When to Use --build"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"First deployment"}),": Ensure all TypeScript is compiled"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"After code changes"}),": Refresh compiled output"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production deployment"}),": Guarantee latest build"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Troubleshooting"}),": Eliminate build-related issues"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"bun-installation-issues",children:"Bun Installation Issues"}),"\n",(0,r.jsx)(n.p,{children:'If you encounter "command not found: bun" or similar errors:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# For macOS (using curl)\ncurl -fsSL https://bun.sh/install | bash\n\n# For macOS (using Homebrew)\nbrew install bun\n\n# For Linux (using curl)\ncurl -fsSL https://bun.sh/install | bash\n\n# For Windows (using PowerShell)\npowershell -c "irm bun.sh/install.ps1 | iex"\n\n# After installation, restart your terminal and verify\nbun --version\n'})}),"\n",(0,r.jsx)(n.h3,{id:"startup-failures",children:"Startup Failures"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check if another instance is running\nps aux | grep elizaos\npkill -f elizaos\n\n# Clear any conflicting processes\nelizaos stop\nelizaos start\n"})}),"\n",(0,r.jsx)(n.h3,{id:"port-conflicts",children:"Port Conflicts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check what's using the port\nlsof -i :3000\n\n# Use different port\nelizaos start --port 3001\n\n# Or stop conflicting service\nsudo kill -9 $(lsof -ti:3000)\nelizaos start\n"})}),"\n",(0,r.jsx)(n.h3,{id:"character-loading-issues",children:"Character Loading Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Verify character file exists and is valid JSON\ncat ./character.json | jq .\n\n# Test with absolute path\nelizaos start --character /full/path/to/character.json\n\n# Start without character to use default\nelizaos start\n"})}),"\n",(0,r.jsx)(n.h3,{id:"configuration-problems",children:"Configuration Problems"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Force reconfiguration to fix corrupted settings\nelizaos start --configure\n\n# Check environment variables\nelizaos env list\n\n# Reset environment if needed\nelizaos env reset\nelizaos start --configure\n"})}),"\n",(0,r.jsx)(n.h3,{id:"build-failures",children:"Build Failures"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clean build and retry\nelizaos start --build\n\n# Check for TypeScript errors\nbun run build\n\n# Install dependencies if missing\nbun install\nelizaos start --build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"service-connection-issues",children:"Service Connection Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check internet connectivity\nping google.com\n\n# Verify API keys are set\nelizaos env list\n\n# Test with minimal configuration\nelizaos start --configure\n"})}),"\n",(0,r.jsx)(n.h2,{id:"production-deployment",children:"Production Deployment"}),"\n",(0,r.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Complete production startup\nelizaos start --build --character ./production-bot.json --port 3000\n\n# With environment file\ncp .env.production .env\nelizaos start --build\n\n# Background process (Linux/macOS)\nnohup elizaos start --build > elizaos.log 2>&1 &\n"})}),"\n",(0,r.jsx)(n.h3,{id:"health-checks",children:"Health Checks"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Verify service is running\ncurl http://localhost:3000/health\n\n# Check process status\nps aux | grep elizaos\n\n# Monitor logs\ntail -f elizaos.log\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/create",children:(0,r.jsx)(n.code,{children:"create"})}),": Create a new project to start"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/dev",children:(0,r.jsx)(n.code,{children:"dev"})}),": Run in development mode with hot reloading"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/agent",children:(0,r.jsx)(n.code,{children:"agent"})}),": Manage individual agents"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/env",children:(0,r.jsx)(n.code,{children:"env"})}),": Configure environment variables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/stop",children:(0,r.jsx)(n.code,{children:"stop"})}),": Stop running agents"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);