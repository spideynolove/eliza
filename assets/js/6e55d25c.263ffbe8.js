"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[5116],{54038:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"cli/publish","title":"Publish Command","description":"Publish a plugin to npm, GitHub, and the registry","source":"@site/docs/cli/publish.md","sourceDirName":"cli","slug":"/cli/publish","permalink":"/docs/cli/publish","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/cli/publish.md","tags":[],"version":"current","lastUpdatedBy":"Sayo","lastUpdatedAt":1748625399000,"sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"Publish Command","description":"Publish a plugin to npm, GitHub, and the registry","keywords":["CLI","publish","registry","npm","GitHub","packages","distribution"],"image":"/img/cli.jpg"},"sidebar":"tutorialSidebar","previous":{"title":"Environment","permalink":"/docs/cli/env"},"next":{"title":"Start","permalink":"/docs/cli/start"}}');var l=n(31085),r=n(71184);const t={sidebar_position:10,title:"Publish Command",description:"Publish a plugin to npm, GitHub, and the registry",keywords:["CLI","publish","registry","npm","GitHub","packages","distribution"],image:"/img/cli.jpg"},d="Publish Command",a={},o=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Publishing",id:"basic-publishing",level:3},{value:"Testing and Validation",id:"testing-and-validation",level:3},{value:"Combined Options",id:"combined-options",level:3},{value:"Publishing Modes",id:"publishing-modes",level:2},{value:"Default: GitHub + Registry Publishing",id:"default-github--registry-publishing",level:3},{value:"npm Publishing",id:"npm-publishing",level:3},{value:"Authentication Requirements",id:"authentication-requirements",level:2},{value:"npm Authentication",id:"npm-authentication",level:3},{value:"GitHub Authentication",id:"github-authentication",level:3},{value:"Plugin Requirements",id:"plugin-requirements",level:2},{value:"Package.json Configuration",id:"packagejson-configuration",level:3},{value:"Required Files and Directories",id:"required-files-and-directories",level:3},{value:"Registry Publishing Criteria",id:"registry-publishing-criteria",level:3},{value:"Publishing Process",id:"publishing-process",level:2},{value:"Package.json Placeholder Replacement",id:"packagejson-placeholder-replacement",level:2},{value:"Registry Integration",id:"registry-integration",level:2},{value:"Automatic Registry Submission",id:"automatic-registry-submission",level:3},{value:"Registry Requirements",id:"registry-requirements",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"1. Create and Develop Plugin",id:"1-create-and-develop-plugin",level:3},{value:"2. Prepare for Publishing",id:"2-prepare-for-publishing",level:3},{value:"3. Publish Plugin",id:"3-publish-plugin",level:3},{value:"Testing Before Publishing",id:"testing-before-publishing",level:2},{value:"Test Mode",id:"test-mode",level:3},{value:"Dry Run Mode",id:"dry-run-mode",level:3},{value:"Post-Publishing Updates",id:"post-publishing-updates",level:2},{value:"Standard Update Process",id:"standard-update-process",level:3},{value:"Why Use Standard Workflows?",id:"why-use-standard-workflows",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Authentication Issues",id:"authentication-issues",level:3},{value:"Package Validation Failures",id:"package-validation-failures",level:3},{value:"Build Failures",id:"build-failures",level:3},{value:"Registry Submission Issues",id:"registry-submission-issues",level:3},{value:"CLI Version Issues",id:"cli-version-issues",level:3},{value:"Related Commands",id:"related-commands",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"publish-command",children:"Publish Command"})}),"\n",(0,l.jsx)(i.p,{children:"Publish a plugin to the registry."}),"\n",(0,l.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"elizaos publish [options]\n"})}),"\n",(0,l.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,l.jsxs)(i.table,{children:[(0,l.jsx)(i.thead,{children:(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.th,{children:"Option"}),(0,l.jsx)(i.th,{children:"Description"})]})}),(0,l.jsxs)(i.tbody,{children:[(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"-n, --npm"})}),(0,l.jsx)(i.td,{children:"Publish to npm instead of GitHub"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"-t, --test"})}),(0,l.jsx)(i.td,{children:"Test publish process without making changes"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"-d, --dry-run"})}),(0,l.jsx)(i.td,{children:"Generate registry files locally without publishing"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"-sr, --skip-registry"})}),(0,l.jsx)(i.td,{children:"Skip publishing to the registry"})]})]})]}),"\n",(0,l.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(i.h3,{id:"basic-publishing",children:"Basic Publishing"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Navigate to your plugin directory\ncd my-plugin\n\n# Publish to GitHub and registry (default)\nelizaos publish\n\n# Publish to npm instead of GitHub\nelizaos publish --npm\n"})}),"\n",(0,l.jsx)(i.h3,{id:"testing-and-validation",children:"Testing and Validation"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Test the publish process without making changes\nelizaos publish --test\n\n# Generate registry files locally without publishing\nelizaos publish --dry-run\n\n# Publish but skip registry submission\nelizaos publish --skip-registry\n"})}),"\n",(0,l.jsx)(i.h3,{id:"combined-options",children:"Combined Options"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Test npm publishing\nelizaos publish --test --npm\n\n# Test publishing while skipping registry\nelizaos publish --test --skip-registry\n"})}),"\n",(0,l.jsx)(i.h2,{id:"publishing-modes",children:"Publishing Modes"}),"\n",(0,l.jsx)(i.h3,{id:"default-github--registry-publishing",children:"Default: GitHub + Registry Publishing"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"elizaos publish\n"})}),"\n",(0,l.jsx)(i.p,{children:"This mode:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Publishes your package to npm"}),"\n",(0,l.jsx)(i.li,{children:"Creates/updates a GitHub repository for source code access"}),"\n",(0,l.jsx)(i.li,{children:"Submits your plugin to the ElizaOS registry for discoverability"}),"\n"]}),"\n",(0,l.jsx)(i.h3,{id:"npm-publishing",children:"npm Publishing"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"elizaos publish --npm\n"})}),"\n",(0,l.jsx)(i.p,{children:"This mode:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Publishes only to npm"}),"\n",(0,l.jsx)(i.li,{children:"Skips GitHub repository creation"}),"\n",(0,l.jsx)(i.li,{children:"Skips registry submission"}),"\n",(0,l.jsx)(i.li,{children:"Useful for private packages or when you want to manage GitHub separately"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"authentication-requirements",children:"Authentication Requirements"}),"\n",(0,l.jsx)(i.p,{children:"Publishing requires authentication for both npm and GitHub:"}),"\n",(0,l.jsx)(i.h3,{id:"npm-authentication",children:"npm Authentication"}),"\n",(0,l.jsx)(i.p,{children:"You must be logged into npm:"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"npm login\n"})}),"\n",(0,l.jsx)(i.h3,{id:"github-authentication",children:"GitHub Authentication"}),"\n",(0,l.jsx)(i.p,{children:"GitHub authentication is required for repository creation and registry submission. You can set your GitHub token in one of two ways:"}),"\n",(0,l.jsxs)(i.ol,{children:["\n",(0,l.jsxs)(i.li,{children:["Set the ",(0,l.jsx)(i.code,{children:"GITHUB_TOKEN"})," environment variable"]}),"\n",(0,l.jsx)(i.li,{children:"When prompted, enter your GitHub Personal Access Token (PAT)"}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Your GitHub PAT should have these scopes:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"repo"})," (for repository access)"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"read:org"})," (for organization access)"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.code,{children:"workflow"})," (for workflow access)"]}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"plugin-requirements",children:"Plugin Requirements"}),"\n",(0,l.jsx)(i.p,{children:"Before publishing, ensure your plugin meets these requirements:"}),"\n",(0,l.jsx)(i.h3,{id:"packagejson-configuration",children:"Package.json Configuration"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-json",children:'{\n  "name": "@npm-username/plugin-name",\n  "description": "${PLUGINDESCRIPTION}",\n  "version": "1.0.0",\n  "type": "module",\n  "main": "dist/index.js",\n  "types": "dist/index.d.ts",\n  "packageType": "plugin",\n  "platform": "node",\n  "license": "UNLICENSED",\n  "author": "${GITHUB_USERNAME}",\n  "keywords": ["plugin", "elizaos"],\n  "repository": {\n    "type": "git",\n    "url": "${REPO_URL}"\n  },\n  "homepage": "https://elizaos.ai",\n  "bugs": {\n    "url": "https://github.com/${GITHUB_USERNAME}/${PLUGINNAME}/issues"\n  },\n  "agentConfig": {\n    "pluginType": "elizaos:plugin:1.0.0",\n    "pluginParameters": {\n      "API_KEY": {\n        "type": "string",\n        "description": "API key for the service"\n      }\n    }\n  },\n  "publishConfig": {\n    "access": "public"\n  }\n}\n'})}),"\n",(0,l.jsx)(i.h3,{id:"required-files-and-directories",children:"Required Files and Directories"}),"\n",(0,l.jsxs)(i.table,{children:[(0,l.jsx)(i.thead,{children:(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.th,{children:"Requirement"}),(0,l.jsx)(i.th,{children:"Description"}),(0,l.jsx)(i.th,{children:"Validation"})]})}),(0,l.jsxs)(i.tbody,{children:[(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.strong,{children:"Plugin Name"})}),(0,l.jsxs)(i.td,{children:["Must include 'plugin-' (e.g., ",(0,l.jsx)(i.code,{children:"plugin-example"}),")"]}),(0,l.jsx)(i.td,{children:"Auto-checked"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.strong,{children:"Images Directory"})}),(0,l.jsxs)(i.td,{children:["Must have an ",(0,l.jsx)(i.code,{children:"images/"})," directory"]}),(0,l.jsx)(i.td,{children:"Auto-created"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.strong,{children:"Logo Image"})}),(0,l.jsxs)(i.td,{children:[(0,l.jsx)(i.code,{children:"images/logo.jpg"})," - 400x400px square (max 500KB)"]}),(0,l.jsx)(i.td,{children:"Auto-checked"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.strong,{children:"Banner Image"})}),(0,l.jsxs)(i.td,{children:[(0,l.jsx)(i.code,{children:"images/banner.jpg"})," - 1280x640px banner (max 1MB)"]}),(0,l.jsx)(i.td,{children:"Auto-checked"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.strong,{children:"Agent Config"})}),(0,l.jsxs)(i.td,{children:["Must include ",(0,l.jsx)(i.code,{children:"agentConfig"})," in package.json"]}),(0,l.jsx)(i.td,{children:"Auto-fixed"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.strong,{children:"Description"})}),(0,l.jsx)(i.td,{children:"Meaningful description (10+ characters)"}),(0,l.jsx)(i.td,{children:"Prompted"})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.strong,{children:"Repository URL"})}),(0,l.jsxs)(i.td,{children:["Must use ",(0,l.jsx)(i.code,{children:"github:"})," format"]}),(0,l.jsx)(i.td,{children:"Auto-fixed"})]})]})]}),"\n",(0,l.jsx)(i.h3,{id:"registry-publishing-criteria",children:"Registry Publishing Criteria"}),"\n",(0,l.jsxs)(i.p,{children:["Before submitting your plugin to the registry, review the detailed publishing criteria and requirements at the ",(0,l.jsx)(i.a,{href:"https://github.com/elizaos-plugins/registry/blob/main/.github/pull_request_template.md",children:"ElizaOS Plugin Registry Pull Request Template"}),". This template contains comprehensive guidelines for plugin submission and acceptance."]}),"\n",(0,l.jsx)(i.h2,{id:"publishing-process",children:"Publishing Process"}),"\n",(0,l.jsxs)(i.p,{children:["When you run the ",(0,l.jsx)(i.code,{children:"publish"})," command, ElizaOS will:"]}),"\n",(0,l.jsxs)(i.ol,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Check CLI version"})," and prompt for updates if needed"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Validate plugin structure"})," and requirements"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Update package.json"})," with actual values (replacing placeholders)"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Get authentication credentials"})," for npm and GitHub"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Build the package"})," (run ",(0,l.jsx)(i.code,{children:"npm run build"}),")"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Publish to npm"})," with ",(0,l.jsx)(i.code,{children:"npm publish --ignore-scripts"})]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Create GitHub repository"})," (unless ",(0,l.jsx)(i.code,{children:"--npm"})," flag is used)"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Submit to registry"})," (unless ",(0,l.jsx)(i.code,{children:"--npm"})," or ",(0,l.jsx)(i.code,{children:"--skip-registry"})," flags are used)"]}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"packagejson-placeholder-replacement",children:"Package.json Placeholder Replacement"}),"\n",(0,l.jsx)(i.p,{children:"The publish command automatically replaces placeholders in your package.json:"}),"\n",(0,l.jsxs)(i.table,{children:[(0,l.jsx)(i.thead,{children:(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.th,{children:"Placeholder"}),(0,l.jsx)(i.th,{children:"Replaced With"}),(0,l.jsx)(i.th,{children:"Example"})]})}),(0,l.jsxs)(i.tbody,{children:[(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"npm-username"})}),(0,l.jsx)(i.td,{children:"Your npm username"}),(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"@username/plugin-example"})})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"plugin-name"})}),(0,l.jsx)(i.td,{children:"Your plugin directory name"}),(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"plugin-example"})})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"${PLUGINDESCRIPTION}"})}),(0,l.jsx)(i.td,{children:"Auto-generated description"}),(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"ElizaOS plugin for example"})})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"${REPO_URL}"})}),(0,l.jsx)(i.td,{children:"GitHub repository URL"}),(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"github:username/plugin-example"})})]}),(0,l.jsxs)(i.tr,{children:[(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"${GITHUB_USERNAME}"})}),(0,l.jsx)(i.td,{children:"Your GitHub username"}),(0,l.jsx)(i.td,{children:(0,l.jsx)(i.code,{children:"username"})})]})]})]}),"\n",(0,l.jsx)(i.h2,{id:"registry-integration",children:"Registry Integration"}),"\n",(0,l.jsx)(i.h3,{id:"automatic-registry-submission",children:"Automatic Registry Submission"}),"\n",(0,l.jsx)(i.p,{children:"When publishing with the default command, ElizaOS automatically:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Creates a Pull Request to add your plugin to the official registry"}),"\n",(0,l.jsxs)(i.li,{children:["Makes your plugin discoverable via ",(0,l.jsx)(i.code,{children:"elizaos plugins list"})]}),"\n",(0,l.jsx)(i.li,{children:"Provides metadata for the plugin marketplace"}),"\n"]}),"\n",(0,l.jsx)(i.h3,{id:"registry-requirements",children:"Registry Requirements"}),"\n",(0,l.jsx)(i.p,{children:"To be accepted into the registry, your plugin must have:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Public repository"})," with ",(0,l.jsx)(i.code,{children:"elizaos-plugins"})," topic"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Required images"})," (logo.jpg and banner.jpg)"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Proper naming"})," convention (plugin-*)"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Agent configuration"})," in package.json"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Meaningful description"})," (not default generated text)"]}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,l.jsx)(i.h3,{id:"1-create-and-develop-plugin",children:"1. Create and Develop Plugin"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Create new plugin\nelizaos create -t plugin my-awesome-plugin\ncd my-awesome-plugin\n\n# Install dependencies\nbun install\n\n# Develop your plugin\nelizaos dev\n\n# Test thoroughly\nelizaos test\n"})}),"\n",(0,l.jsx)(i.h3,{id:"2-prepare-for-publishing",children:"2. Prepare for Publishing"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Test the publish process\nelizaos publish --test\n\n# Check requirements\nls images/  # Should contain logo.jpg and banner.jpg\ncat package.json  # Verify all fields are correct\n"})}),"\n",(0,l.jsx)(i.h3,{id:"3-publish-plugin",children:"3. Publish Plugin"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Login to npm\nnpm login\n\n# Publish to GitHub + registry (recommended)\nelizaos publish\n\n# Or publish to npm only\nelizaos publish --npm\n"})}),"\n",(0,l.jsx)(i.h2,{id:"testing-before-publishing",children:"Testing Before Publishing"}),"\n",(0,l.jsx)(i.h3,{id:"test-mode",children:"Test Mode"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"elizaos publish --test\n"})}),"\n",(0,l.jsx)(i.p,{children:"Test mode validates:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Package structure and naming"}),"\n",(0,l.jsx)(i.li,{children:"Required files and directories"}),"\n",(0,l.jsx)(i.li,{children:"npm and GitHub authentication"}),"\n",(0,l.jsx)(i.li,{children:"Build process without publishing"}),"\n"]}),"\n",(0,l.jsx)(i.h3,{id:"dry-run-mode",children:"Dry Run Mode"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"elizaos publish --dry-run\n"})}),"\n",(0,l.jsx)(i.p,{children:"Dry run mode:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Generates registry metadata files locally"}),"\n",(0,l.jsxs)(i.li,{children:["Creates files in ",(0,l.jsx)(i.code,{children:"packages/registry/"})," directory"]}),"\n",(0,l.jsx)(i.li,{children:"Shows what would be submitted to registry"}),"\n",(0,l.jsx)(i.li,{children:"Does not publish or create PRs"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"post-publishing-updates",children:"Post-Publishing Updates"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.strong,{children:"Important"}),": The ",(0,l.jsx)(i.code,{children:"elizaos publish"})," command is designed for ",(0,l.jsx)(i.strong,{children:"initial plugin publishing only"}),". After your plugin is published to the registry, all continuous maintenance and updates should be managed through standard GitHub and npm workflows."]}),"\n",(0,l.jsx)(i.h3,{id:"standard-update-process",children:"Standard Update Process"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# 1. Make changes and test\nelizaos test\n\n# 2. Update version\nnpm version patch  # or minor/major\n\n# 3. Publish to npm\nnpm publish\n\n# 4. Push to GitHub\ngit push origin main\ngit push --tags\n"})}),"\n",(0,l.jsx)(i.h3,{id:"why-use-standard-workflows",children:"Why Use Standard Workflows?"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Direct updates"}),": ",(0,l.jsx)(i.code,{children:"npm publish"})," directly updates your package on npm"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Version control"}),": Standard git workflows maintain proper version history"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Tool compatibility"}),": Works with all standard development tools and CI/CD"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Registry sync"}),": The ElizaOS registry automatically syncs with npm updates"]}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsxs)(i.strong,{children:["Only use ",(0,l.jsx)(i.code,{children:"elizaos publish"})," for:"]})}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Initial plugin publishing and registry submission"}),"\n",(0,l.jsx)(i.li,{children:"Setting up the initial GitHub repository structure"}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.strong,{children:"Use standard npm/GitHub workflows for:"})}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Version updates and bug fixes"}),"\n",(0,l.jsx)(i.li,{children:"Feature additions and improvements"}),"\n",(0,l.jsx)(i.li,{children:"All ongoing maintenance and development"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(i.h3,{id:"authentication-issues",children:"Authentication Issues"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# npm login problems\nnpm logout\nnpm login\n\n# GitHub token issues\n# Set environment variable:\nexport GITHUB_TOKEN=your_token_here\n\n# Or re-enter when prompted\nelizaos publish\n"})}),"\n",(0,l.jsx)(i.h3,{id:"package-validation-failures",children:"Package Validation Failures"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:'# Check package structure\nelizaos publish --test\n\n# Common issues:\n# - Plugin name must start with "plugin-"\n# - Missing images/logo.jpg (400x400px, max 500KB)\n# - Missing images/banner.jpg (1280x640px, max 1MB)\n# - Repository URL format (use github:username/repo)\n'})}),"\n",(0,l.jsx)(i.h3,{id:"build-failures",children:"Build Failures"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Check build process\nnpm run build\n\n# Install missing dependencies\nbun install\n\n# Check TypeScript errors\nbun i && bun run build\n"})}),"\n",(0,l.jsx)(i.h3,{id:"registry-submission-issues",children:"Registry Submission Issues"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Test registry generation\nelizaos publish --dry-run\n\n# Check generated files\nls packages/registry/\n\n# Skip registry if having issues\nelizaos publish --skip-registry\n"})}),"\n",(0,l.jsx)(i.h3,{id:"cli-version-issues",children:"CLI Version Issues"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-bash",children:"# Update CLI before publishing\nelizaos update\n\n# Check current version\nelizaos --version\n"})}),"\n",(0,l.jsx)(i.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.a,{href:"/docs/cli/create",children:(0,l.jsx)(i.code,{children:"create"})}),": Create a new plugin to publish"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.a,{href:"/docs/cli/plugins",children:(0,l.jsx)(i.code,{children:"plugins"})}),": Manage and discover published plugins"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.a,{href:"/docs/cli/test",children:(0,l.jsx)(i.code,{children:"test"})}),": Test your plugin before publishing"]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.a,{href:"/docs/cli/env",children:(0,l.jsx)(i.code,{children:"env"})}),": Configure environment variables for publishing"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},71184:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>d});var s=n(14041);const l={},r=s.createContext(l);function t(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);