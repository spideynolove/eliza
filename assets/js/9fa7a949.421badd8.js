"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[93233],{33542:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"cli/plugins","title":"Plugin Management","description":"Manage ElizaOS plugins within a project - list, add, remove","source":"@site/docs/cli/plugins.md","sourceDirName":"cli","slug":"/cli/plugins","permalink":"/docs/cli/plugins","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/cli/plugins.md","tags":[],"version":"current","lastUpdatedBy":"Christopher Trimboli","lastUpdatedAt":1749078171000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Plugin Management","description":"Manage ElizaOS plugins within a project - list, add, remove","keywords":["plugins","extensions","packages","npm","registry","installation","configuration"],"image":"/img/cli.jpg"}}');var s=i(31085),a=i(71184);const t={sidebar_position:4,title:"Plugin Management",description:"Manage ElizaOS plugins within a project - list, add, remove",keywords:["plugins","extensions","packages","npm","registry","installation","configuration"],image:"/img/cli.jpg"},r="Plugin Command",d={},o=[{value:"Usage",id:"usage",level:2},{value:"Subcommands",id:"subcommands",level:2},{value:"Examples",id:"examples",level:2},{value:"Listing Available Plugins",id:"listing-available-plugins",level:3},{value:"Adding Plugins",id:"adding-plugins",level:3},{value:"Updating Plugin Registry",id:"updating-plugin-registry",level:3},{value:"Listing Installed Plugins",id:"listing-installed-plugins",level:3},{value:"Removing Plugins",id:"removing-plugins",level:3},{value:"Plugin Installation Formats",id:"plugin-installation-formats",level:2},{value:"Package Names",id:"package-names",level:3},{value:"GitHub Integration",id:"github-integration",level:3},{value:"Version Control",id:"version-control",level:3},{value:"Plugin Development Workflow",id:"plugin-development-workflow",level:2},{value:"1. Create a Plugin",id:"1-create-a-plugin",level:3},{value:"2. Install in Your Project",id:"2-install-in-your-project",level:3},{value:"3. Test Your Plugin",id:"3-test-your-plugin",level:3},{value:"4. Publish Your Plugin",id:"4-publish-your-plugin",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Plugin Installation Failures",id:"plugin-installation-failures",level:3},{value:"Bun Installation Issues",id:"bun-installation-issues",level:3},{value:"Network Issues",id:"network-issues",level:3},{value:"Plugin Not Found",id:"plugin-not-found",level:3},{value:"Dependency Conflicts",id:"dependency-conflicts",level:3},{value:"Environment Variable Issues",id:"environment-variable-issues",level:3},{value:"Branch/Tag Issues",id:"branchtag-issues",level:3},{value:"Related Commands",id:"related-commands",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"plugin-command",children:"Plugin Command"})}),"\n",(0,s.jsx)(e.p,{children:"Manage ElizaOS plugins."}),"\n",(0,s.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"elizaos plugins [options] [command]\n"})}),"\n",(0,s.jsx)(e.h2,{id:"subcommands",children:"Subcommands"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Subcommand"}),(0,s.jsx)(e.th,{children:"Aliases"}),(0,s.jsx)(e.th,{children:"Description"}),(0,s.jsx)(e.th,{children:"Arguments"}),(0,s.jsx)(e.th,{children:"Options"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"list"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"l"})}),(0,s.jsx)(e.td,{children:"List available plugins to install into the project"}),(0,s.jsx)(e.td,{}),(0,s.jsxs)(e.td,{children:[(0,s.jsx)(e.code,{children:"--all"})," (detailed version info), ",(0,s.jsx)(e.code,{children:"--v0"})," (v0.x compatible only)"]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"add"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"install"})}),(0,s.jsx)(e.td,{children:"Add a plugin to the project"}),(0,s.jsxs)(e.td,{children:[(0,s.jsx)(e.code,{children:"<plugin>"}),' (plugins name e.g., "abc", "plugin-abc", "elizaos/plugin-abc")']}),(0,s.jsxs)(e.td,{children:[(0,s.jsx)(e.code,{children:"-n, --no-env-prompt"}),", ",(0,s.jsx)(e.code,{children:"-b, --branch <branchName>"})," (default: main), ",(0,s.jsx)(e.code,{children:"-T, --tag <tagname>"})]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"update"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"refresh"})}),(0,s.jsx)(e.td,{children:"Fetch the latest plugin registry and update local cache"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"installed-plugins"})}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"List plugins found in the project dependencies"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"remove"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"delete"})}),(0,s.jsx)(e.td,{children:"Remove a plugins from the project"}),(0,s.jsxs)(e.td,{children:[(0,s.jsx)(e.code,{children:"<plugin>"}),' (plugins name e.g., "abc", "plugin-abc", "elizaos/plugin-abc")']}),(0,s.jsx)(e.td,{})]})]})]}),"\n",(0,s.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(e.h3,{id:"listing-available-plugins",children:"Listing Available Plugins"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# List all available plugins\nelizaos plugins list\n\n# Using alias\nelizaos plugins l\n\n# List all plugins with detailed version information\nelizaos plugins list --all\n\n# List only v0.x compatible plugins\nelizaos plugins list --v0\n"})}),"\n",(0,s.jsx)(e.h3,{id:"adding-plugins",children:"Adding Plugins"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Add a plugin by short name (looks up '@elizaos/plugin-openai')\nelizaos plugins add openai\n\n# Add a plugin by full package name\nelizaos plugins add @elizaos/plugin-anthropic\n\n# Add plugin and skip environment variable prompts\nelizaos plugins add google-ai --no-env-prompt\n\n# Add plugin from specific branch (for monorepo development)\nelizaos plugins add custom-plugin --branch feature/new-api\n\n# Add a specific version/tag of a plugin from npm\nelizaos plugins add elevenlabs --tag latest\n\n# Install plugin directly from GitHub (HTTPS URL)\nelizaos plugins add https://github.com/owner/my-plugin\n\n# Install from GitHub with branch reference\nelizaos plugins add https://github.com/owner/my-plugin/tree/feature-branch\n\n# Install using GitHub shorthand syntax\nelizaos plugins add github:owner/my-plugin\n\n# Install specific branch using GitHub shorthand\nelizaos plugins add github:owner/my-plugin#feature-branch\n\n# Using alias\nelizaos plugins install openai\n"})}),"\n",(0,s.jsx)(e.h3,{id:"updating-plugin-registry",children:"Updating Plugin Registry"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Fetch latest plugin registry and update local cache\nelizaos plugins update\n\n# Using alias\nelizaos plugins refresh\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"When to run this:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:'You see "Plugin cache is empty or not found" messages'}),"\n",(0,s.jsx)(e.li,{children:"Want to get the latest available plugins"}),"\n",(0,s.jsx)(e.li,{children:"Plugin installation fails due to outdated registry cache"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"listing-installed-plugins",children:"Listing Installed Plugins"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Show plugins currently in your project's package.json\nelizaos plugins installed-plugins\n"})}),"\n",(0,s.jsx)(e.h3,{id:"removing-plugins",children:"Removing Plugins"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Remove plugin by short name\nelizaos plugins remove openai\n\n# Remove plugin by full package name\nelizaos plugins remove @elizaos/plugin-anthropic\n\n# Using alias\nelizaos plugins delete openai\n"})}),"\n",(0,s.jsx)(e.h2,{id:"plugin-installation-formats",children:"Plugin Installation Formats"}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"add"})," command supports multiple plugin formats:"]}),"\n",(0,s.jsx)(e.h3,{id:"package-names",children:"Package Names"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Short name (auto-resolves to @elizaos/plugin-*)\nelizaos plugins add openai\n\n# Full package name\nelizaos plugins add @elizaos/plugin-openai\n\n# Scoped packages\nelizaos plugins add @company/plugin-custom\n"})}),"\n",(0,s.jsx)(e.h3,{id:"github-integration",children:"GitHub Integration"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# HTTPS URL\nelizaos plugins add https://github.com/user/my-plugin\n\n# GitHub shorthand\nelizaos plugins add github:user/my-plugin\n\n# With branch/tag\nelizaos plugins add github:user/my-plugin#feature-branch\n"})}),"\n",(0,s.jsx)(e.h3,{id:"version-control",children:"Version Control"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Specific npm tag\nelizaos plugins add plugin-name --tag beta\n\n# Development branch (for monorepo)\nelizaos plugins add plugin-name --branch main\n"})}),"\n",(0,s.jsx)(e.h2,{id:"plugin-development-workflow",children:"Plugin Development Workflow"}),"\n",(0,s.jsx)(e.h3,{id:"1-create-a-plugin",children:"1. Create a Plugin"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"elizaos create -t plugin my-awesome-plugin\ncd plugin-my-awesome-plugin\n"})}),"\n",(0,s.jsx)(e.h3,{id:"2-install-in-your-project",children:"2. Install in Your Project"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# During development, install from local directory\nelizaos plugins add ./path/to/plugin-my-awesome-plugin\n\n# Or install from your development branch\nelizaos plugins add my-awesome-plugin --branch feature/new-feature\n"})}),"\n",(0,s.jsx)(e.h3,{id:"3-test-your-plugin",children:"3. Test Your Plugin"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Start development mode\nelizaos dev\n\n# Run tests\nelizaos test\n"})}),"\n",(0,s.jsx)(e.h3,{id:"4-publish-your-plugin",children:"4. Publish Your Plugin"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Test publishing process\nelizaos publish --test\n\n# Publish to registry\nelizaos publish\n"})}),"\n",(0,s.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(e.h3,{id:"plugin-installation-failures",children:"Plugin Installation Failures"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# If plugin cache is empty or corrupted\nelizaos plugins update\n\n# Clear cache and retry\nrm -rf ~/.eliza/cache\nelizaos plugins update\nelizaos plugins add plugin-name\n"})}),"\n",(0,s.jsx)(e.h3,{id:"bun-installation-issues",children:"Bun Installation Issues"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# If you see "bun: command not found" errors\n# Install Bun using the appropriate command for your system:\n\n# Linux/macOS:\ncurl -fsSL https://bun.sh/install | bash\n\n# Windows:\npowershell -c "irm bun.sh/install.ps1 | iex"\n\n# macOS with Homebrew:\nbrew install bun\n\n# After installation, restart your terminal or:\nsource ~/.bashrc  # Linux\nsource ~/.zshrc   # macOS with zsh\n\n# Verify installation:\nbun --version\n'})}),"\n",(0,s.jsx)(e.h3,{id:"network-issues",children:"Network Issues"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# For GitHub authentication problems\ngit config --global credential.helper store\n\n# For npm registry issues\nbun config set registry https://registry.npmjs.org/\nelizaos plugins add plugin-name\n"})}),"\n",(0,s.jsx)(e.h3,{id:"plugin-not-found",children:"Plugin Not Found"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Check exact plugin name in registry\nelizaos plugins list\n\n# Try different naming formats\nelizaos plugins add openai                    # Short name\nelizaos plugins add @elizaos/plugin-openai   # Full package name\nelizaos plugins add plugin-openai            # With plugin prefix\n"})}),"\n",(0,s.jsx)(e.h3,{id:"dependency-conflicts",children:"Dependency Conflicts"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# If dependency installation fails\ncd your-project\nbun install\n\n# Check for conflicting dependencies\nbun pm ls\n\n# Force reinstall\nrm -rf node_modules\nbun install\n"})}),"\n",(0,s.jsx)(e.h3,{id:"environment-variable-issues",children:"Environment Variable Issues"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# If plugin prompts for missing environment variables\nelizaos env set OPENAI_API_KEY your-key\n\n# Skip environment prompts during installation\nelizaos plugins add plugin-name --no-env-prompt\n"})}),"\n",(0,s.jsx)(e.h3,{id:"branchtag-issues",children:"Branch/Tag Issues"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# If branch doesn't exist\ngit ls-remote --heads https://github.com/user/repo\n\n# If tag doesn't exist\ngit ls-remote --tags https://github.com/user/repo\n\n# Use correct branch/tag name\nelizaos plugins add plugin-name --branch main\nelizaos plugins add plugin-name --tag v1.0.0\n"})}),"\n",(0,s.jsx)(e.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/docs/cli/create",children:(0,s.jsx)(e.code,{children:"create"})}),": Create a new project or plugin"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/docs/cli/env",children:(0,s.jsx)(e.code,{children:"env"})}),": Manage environment variables needed by plugins"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"/docs/cli/publish",children:(0,s.jsx)(e.code,{children:"publish"})}),": Publish your plugin to the registry"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},71184:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>r});var l=i(14041);const s={},a=l.createContext(s);function t(n){const e=l.useContext(a);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),l.createElement(a.Provider,{value:e},n.children)}}}]);