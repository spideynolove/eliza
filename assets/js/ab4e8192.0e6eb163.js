"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[17075],{6589:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>p,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"cli/update","title":"Update Command","description":"Update your project\'s ElizaOS dependencies and CLI to the latest published versions","source":"@site/docs/cli/update.md","sourceDirName":"cli","slug":"/cli/update","permalink":"/docs/cli/update","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/cli/update.md","tags":[],"version":"current","lastUpdatedBy":"Christopher Trimboli","lastUpdatedAt":1749078171000,"sidebarPosition":11,"frontMatter":{"sidebar_position":11,"title":"Update Command","description":"Update your project\'s ElizaOS dependencies and CLI to the latest published versions","keywords":["CLI","update","dependencies","versions","packages","maintenance"],"image":"/img/cli.jpg"},"sidebar":"tutorialSidebar","previous":{"title":"Test","permalink":"/docs/cli/test"},"next":{"title":"Introduction","permalink":"/docs/rest/eliza-os-api"}}');var a=s(31085),l=s(71184);const d={sidebar_position:11,title:"Update Command",description:"Update your project's ElizaOS dependencies and CLI to the latest published versions",keywords:["CLI","update","dependencies","versions","packages","maintenance"],image:"/img/cli.jpg"},t="Update Command",r={},c=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Update",id:"basic-update",level:3},{value:"Update Options",id:"update-options",level:3},{value:"Combined Options",id:"combined-options",level:3},{value:"Update Process",id:"update-process",level:2},{value:"Default Behavior",id:"default-behavior",level:3},{value:"CLI-Only Updates",id:"cli-only-updates",level:3},{value:"Package-Only Updates",id:"package-only-updates",level:3},{value:"Project Detection",id:"project-detection",level:2},{value:"Version Handling",id:"version-handling",level:2},{value:"Package Selection",id:"package-selection",level:3},{value:"Version Constraints",id:"version-constraints",level:3},{value:"Examples Output",id:"examples-output",level:2},{value:"Check Mode",id:"check-mode",level:3},{value:"CLI Update",id:"cli-update",level:3},{value:"Package Update",id:"package-update",level:3},{value:"Workspace Support",id:"workspace-support",level:2},{value:"Monorepo Detection",id:"monorepo-detection",level:3},{value:"Example with Workspaces",id:"example-with-workspaces",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Bun Installation Issues",id:"bun-installation-issues",level:3},{value:"CLI Update Issues",id:"cli-update-issues",level:3},{value:"Package Update Failures",id:"package-update-failures",level:3},{value:"Build Failures After Update",id:"build-failures-after-update",level:3},{value:"Dependency Resolution Issues",id:"dependency-resolution-issues",level:3},{value:"Permission Errors",id:"permission-errors",level:3},{value:"Network Issues",id:"network-issues",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Before Updating",id:"before-updating",level:3},{value:"Safe Update Process",id:"safe-update-process",level:3},{value:"After Updating",id:"after-updating",level:3},{value:"Version Strategy",id:"version-strategy",level:2},{value:"Staying Current",id:"staying-current",level:3},{value:"Stability Considerations",id:"stability-considerations",level:3},{value:"Related Commands",id:"related-commands",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"update-command",children:"Update Command"})}),"\n",(0,a.jsx)(n.p,{children:"Update ElizaOS CLI and project dependencies."}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"elizaos update [options]\n"})}),"\n",(0,a.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Option"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"-c, --check"})}),(0,a.jsx)(n.td,{children:"Check for available updates without applying them"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"-sb, --skip-build"})}),(0,a.jsx)(n.td,{children:"Skip building after updating"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--cli"})}),(0,a.jsx)(n.td,{children:"Update only the global CLI installation (without updating packages)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"--packages"})}),(0,a.jsx)(n.td,{children:"Update only packages (without updating the CLI)"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"basic-update",children:"Basic Update"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Update both CLI and project dependencies (default)\nelizaos update\n\n# Update with confirmation of what will be updated\nelizaos update\n"})}),"\n",(0,a.jsx)(n.h3,{id:"update-options",children:"Update Options"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check for available updates without applying them\nelizaos update --check\n\n# Update only the global CLI\nelizaos update --cli\n\n# Update only project packages\nelizaos update --packages\n\n# Update without rebuilding afterward\nelizaos update --skip-build\n"})}),"\n",(0,a.jsx)(n.h3,{id:"combined-options",children:"Combined Options"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check only CLI updates\nelizaos update --check --cli\n\n# Update packages without building\nelizaos update --packages --skip-build\n\n# Check packages only\nelizaos update --check --packages\n"})}),"\n",(0,a.jsx)(n.h2,{id:"update-process",children:"Update Process"}),"\n",(0,a.jsx)(n.h3,{id:"default-behavior",children:"Default Behavior"}),"\n",(0,a.jsxs)(n.p,{children:["When you run ",(0,a.jsx)(n.code,{children:"elizaos update"})," without options:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Detects Project Type"}),": Determines if you're in an ElizaOS project or plugin"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Checks CLI Version"}),": Compares installed CLI with latest available"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Scans Dependencies"}),": Finds all ",(0,a.jsx)(n.code,{children:"@elizaos/*"})," packages in package.json"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Shows Update Plan"}),": Lists what will be updated"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Prompts for Confirmation"}),": Asks before proceeding with updates"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Updates Packages"}),": Installs latest versions"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Rebuilds Project"}),": Compiles updated dependencies (unless ",(0,a.jsx)(n.code,{children:"--skip-build"}),")"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"cli-only-updates",children:"CLI-Only Updates"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"elizaos update --cli\n"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Checks Global Installation"}),": Verifies CLI is installed globally"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Compares Versions"}),": Current vs latest available"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Updates CLI"}),": Installs latest version globally"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Confirms Update"}),": Shows success status"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"package-only-updates",children:"Package-Only Updates"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"elizaos update --packages\n"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Scans Project"}),": Identifies ElizaOS dependencies"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Checks Versions"}),": Compares with latest available"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Updates Dependencies"}),": Installs latest versions"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Rebuilds"}),": Compiles project (unless ",(0,a.jsx)(n.code,{children:"--skip-build"}),")"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"project-detection",children:"Project Detection"}),"\n",(0,a.jsx)(n.p,{children:"The update command automatically detects:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"ElizaOS Projects"}),": Updates project dependencies and rebuilds"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"ElizaOS Plugins"}),": Updates plugin dependencies and rebuilds"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Non-ElizaOS Projects"}),": Shows error message"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"version-handling",children:"Version Handling"}),"\n",(0,a.jsx)(n.h3,{id:"package-selection",children:"Package Selection"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Updates all ",(0,a.jsx)(n.code,{children:"@elizaos/*"})," packages in dependencies and devDependencies"]}),"\n",(0,a.jsxs)(n.li,{children:["Skips workspace references (e.g., ",(0,a.jsx)(n.code,{children:"workspace:*"}),")"]}),"\n",(0,a.jsx)(n.li,{children:"Updates to the same version as the latest CLI"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"version-constraints",children:"Version Constraints"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Respects existing version prefixes (",(0,a.jsx)(n.code,{children:"^"}),", ",(0,a.jsx)(n.code,{children:"~"}),", exact)"]}),"\n",(0,a.jsx)(n.li,{children:"Updates to latest published version on npm"}),"\n",(0,a.jsx)(n.li,{children:"Handles pre-release versions appropriately"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"examples-output",children:"Examples Output"}),"\n",(0,a.jsx)(n.h3,{id:"check-mode",children:"Check Mode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ elizaos update --check\n\nChecking for updates...\nCurrent CLI version: 1.3.5\nLatest CLI version: 1.4.0\n\nElizaOS packages that can be updated:\n  - @elizaos/core (1.3.0) \u2192 1.4.0\n  - @elizaos/plugin-openai (1.2.5) \u2192 1.4.0\n  - @elizaos/plugin-discord (1.1.8) \u2192 1.4.0\n\nTo apply updates, run: elizaos update\n"})}),"\n",(0,a.jsx)(n.h3,{id:"cli-update",children:"CLI Update"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ elizaos update --cli\n\nUpdating ElizaOS CLI...\nCurrent version: 1.3.5\nLatest version: 1.4.0\n\u2713 Successfully updated to 1.4.0\nPlease restart your terminal for changes to take effect.\n"})}),"\n",(0,a.jsx)(n.h3,{id:"package-update",children:"Package Update"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ elizaos update --packages\n\nUpdating project dependencies...\nFound 3 ElizaOS packages to update:\n  - @elizaos/core: 1.3.0 \u2192 1.4.0\n  - @elizaos/plugin-openai: 1.2.5 \u2192 1.4.0\n  - @elizaos/plugin-discord: 1.1.8 \u2192 1.4.0\n\nProceed with update? (Y/n) Y\n\u2713 Updated dependencies\n\u2713 Installing packages...\n\u2713 Building project...\nUpdate completed successfully!\n"})}),"\n",(0,a.jsx)(n.h2,{id:"workspace-support",children:"Workspace Support"}),"\n",(0,a.jsx)(n.h3,{id:"monorepo-detection",children:"Monorepo Detection"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Automatically detects workspace references"}),"\n",(0,a.jsxs)(n.li,{children:["Skips packages with ",(0,a.jsx)(n.code,{children:"workspace:*"})," versions"]}),"\n",(0,a.jsx)(n.li,{children:"Shows which packages are workspace-managed"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"example-with-workspaces",children:"Example with Workspaces"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ elizaos update --check\n\nElizaOS packages found:\n  - @elizaos/core (workspace:*) \u2192 Skipped (workspace reference)\n  - @elizaos/plugin-openai (1.2.5) \u2192 1.4.0\n  - @elizaos/plugin-discord (workspace:*) \u2192 Skipped (workspace reference)\n\nOnly non-workspace packages will be updated.\n"})}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsx)(n.h3,{id:"bun-installation-issues",children:"Bun Installation Issues"}),"\n",(0,a.jsx)(n.p,{children:"If you encounter errors related to bun not being found:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# For Linux/macOS (using curl)\ncurl -fsSL https://bun.sh/install | bash\n\n# For macOS (using Homebrew)\nbrew install bun\n\n# For Windows (using PowerShell)\npowershell -c "irm bun.sh/install.ps1 | iex"\n\n# After installation, restart your terminal and verify\nbun --version\n'})}),"\n",(0,a.jsx)(n.h3,{id:"cli-update-issues",children:"CLI Update Issues"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check if CLI is installed globally\nbun pm ls -g @elizaos/cli\n\n# Install CLI globally if needed\nbun install -g @elizaos/cli\n\n# Update with administrator privileges (if needed)\nsudo bun install -g @elizaos/cli\n"})}),"\n",(0,a.jsx)(n.h3,{id:"package-update-failures",children:"Package Update Failures"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Clear package manager cache\nbun pm cache rm\nrm -rf node_modules\nbun i && bun run build\n\n# Update with fresh installation\nelizaos update --packages\n"})}),"\n",(0,a.jsx)(n.h3,{id:"build-failures-after-update",children:"Build Failures After Update"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check for TypeScript errors\nbun run build\n\n# Update with build skip, then manual build\nelizaos update --skip-build\nbun i && bun run build\n"})}),"\n",(0,a.jsx)(n.h3,{id:"dependency-resolution-issues",children:"Dependency Resolution Issues"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check for conflicting versions\nbun pm ls\n\n# Clear lockfile and reinstall\nrm bun.lockb\nbun i && bun run build\nelizaos update\n"})}),"\n",(0,a.jsx)(n.h3,{id:"permission-errors",children:"Permission Errors"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# For global CLI updates on macOS/Linux\nsudo elizaos update --cli\n\n# Or change bun global directory ownership\nsudo chown -R $(whoami) ~/.bun\n"})}),"\n",(0,a.jsx)(n.h3,{id:"network-issues",children:"Network Issues"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check registry connectivity\nbun config get registry\n\n# Update with different registry\nbun config set registry https://registry.npmjs.org/\nelizaos update\n"})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsx)(n.h3,{id:"before-updating",children:"Before Updating"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Always check first\nelizaos update --check\n\n# Backup your project\ngit add . && git commit -m "Pre-update backup"\n\n# Check current versions\nbun pm ls | grep @elizaos\n'})}),"\n",(0,a.jsx)(n.h3,{id:"safe-update-process",children:"Safe Update Process"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# 1. Check what will be updated\nelizaos update --check\n\n# 2. Update CLI first\nelizaos update --cli\n\n# 3. Update packages\nelizaos update --packages\n\n# 4. Test your project\nelizaos start --build\n"})}),"\n",(0,a.jsx)(n.h3,{id:"after-updating",children:"After Updating"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Verify update success\nelizaos --version\n\n# Test project functionality\nelizaos dev\n\n# Check for any issues\nelizaos test\n"})}),"\n",(0,a.jsx)(n.h2,{id:"version-strategy",children:"Version Strategy"}),"\n",(0,a.jsx)(n.h3,{id:"staying-current",children:"Staying Current"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Update regularly to get latest features and fixes"}),"\n",(0,a.jsxs)(n.li,{children:["Use ",(0,a.jsx)(n.code,{children:"--check"})," to monitor available updates"]}),"\n",(0,a.jsx)(n.li,{children:"Subscribe to ElizaOS release notes"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"stability-considerations",children:"Stability Considerations"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Test updates in development before production"}),"\n",(0,a.jsx)(n.li,{children:"Consider pinning versions for production deployments"}),"\n",(0,a.jsx)(n.li,{children:"Review changelogs for breaking changes"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/cli/create",children:(0,a.jsx)(n.code,{children:"create"})}),": Create new projects with latest versions"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/cli/start",children:(0,a.jsx)(n.code,{children:"start"})}),": Start your updated project"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/cli/dev",children:(0,a.jsx)(n.code,{children:"dev"})}),": Run in development mode after updates"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/cli/test",children:(0,a.jsx)(n.code,{children:"test"})}),": Test your project after updates"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>t});var i=s(14041);const a={},l=i.createContext(a);function d(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);