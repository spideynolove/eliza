"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[67188],{27710:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"cli/test","title":"Test Command","description":"Run and manage tests for ElizaOS projects and plugins","source":"@site/docs/cli/test.md","sourceDirName":"cli","slug":"/cli/test","permalink":"/docs/cli/test","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/cli/test.md","tags":[],"version":"current","lastUpdatedBy":"Christopher Trimboli","lastUpdatedAt":1749078171000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Test Command","description":"Run and manage tests for ElizaOS projects and plugins","keywords":["testing","component tests","e2e tests","Vitest","test runner","development"],"image":"/img/cli.jpg"},"sidebar":"tutorialSidebar","previous":{"title":"Start","permalink":"/docs/cli/start"},"next":{"title":"Update","permalink":"/docs/cli/update"}}');var i=n(31085),l=n(71184);const o={sidebar_position:6,title:"Test Command",description:"Run and manage tests for ElizaOS projects and plugins",keywords:["testing","component tests","e2e tests","Vitest","test runner","development"],image:"/img/cli.jpg"},r="Test Command",d={},a=[{value:"Usage",id:"usage",level:2},{value:"Subcommands",id:"subcommands",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Test Execution",id:"basic-test-execution",level:3},{value:"Test Filtering",id:"test-filtering",level:3},{value:"Advanced Options",id:"advanced-options",level:3},{value:"Test Types",id:"test-types",level:2},{value:"Component Tests",id:"component-tests",level:3},{value:"End-to-End Tests",id:"end-to-end-tests",level:3},{value:"Automatic Building",id:"automatic-building",level:2},{value:"Build Behavior",id:"build-behavior",level:3},{value:"When Build Fails",id:"when-build-fails",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Bun Installation Issues",id:"bun-installation-issues",level:3},{value:"Component Test Issues",id:"component-test-issues",level:3},{value:"E2E Test Issues",id:"e2e-test-issues",level:3},{value:"Build-Related Issues",id:"build-related-issues",level:3},{value:"Related Commands",id:"related-commands",level:2}];function c(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"test-command",children:"Test Command"})}),"\n",(0,i.jsx)(s.p,{children:"Run tests for Eliza agent projects and plugins."}),"\n",(0,i.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"elizaos test [options] [command]\n"})}),"\n",(0,i.jsx)(s.h2,{id:"subcommands",children:"Subcommands"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Subcommand"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"component"})}),(0,i.jsx)(s.td,{children:"Run component tests (via Vitest)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"e2e"})}),(0,i.jsx)(s.td,{children:"Run end-to-end runtime tests"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"all"})}),(0,i.jsx)(s.td,{children:"Run both component and e2e tests (default)"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Option"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-p, --port <port>"})}),(0,i.jsx)(s.td,{children:"Server port for e2e tests"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-n, --name <n>"})}),(0,i.jsx)(s.td,{children:"Filter tests by name (matches file names or test suite names)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"--skip-build"})}),(0,i.jsx)(s.td,{children:"Skip building before running tests"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(s.h3,{id:"basic-test-execution",children:"Basic Test Execution"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Run all tests (component and e2e) - default behavior\nelizaos test\n\n# Explicitly run all tests\nelizaos test all\n\n# Run only component tests\nelizaos test component\n\n# Run only end-to-end tests\nelizaos test e2e\n"})}),"\n",(0,i.jsx)(s.h3,{id:"test-filtering",children:"Test Filtering"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Filter component tests by name\nelizaos test component --name auth\n\n# Filter e2e tests by name\nelizaos test e2e --name database\n\n# Filter all tests by name\nelizaos test --name plugin\n"})}),"\n",(0,i.jsx)(s.h3,{id:"advanced-options",children:"Advanced Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Run tests on custom port for e2e\nelizaos test e2e --port 4000\n\n# Skip building before running tests\nelizaos test --skip-build\n\n# Combine options\nelizaos test e2e --port 3001 --name integration --skip-build\n"})}),"\n",(0,i.jsx)(s.h2,{id:"test-types",children:"Test Types"}),"\n",(0,i.jsx)(s.h3,{id:"component-tests",children:"Component Tests"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Location"}),": ",(0,i.jsx)(s.code,{children:"__tests__/"})," directory",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Framework"}),": Vitest",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Purpose"}),": Unit and integration testing of individual components"]}),"\n",(0,i.jsx)(s.h3,{id:"end-to-end-tests",children:"End-to-End Tests"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Location"}),": ",(0,i.jsx)(s.code,{children:"e2e/"})," directory",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Framework"}),": Custom ElizaOS test runner",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Purpose"}),": Runtime behavior testing with full agent context"]}),"\n",(0,i.jsx)(s.h2,{id:"automatic-building",children:"Automatic Building"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"elizaos test"})," command automatically builds your project or plugin before running tests to ensure you're testing the latest code. This includes:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"TypeScript compilation"}),": Compiles ",(0,i.jsx)(s.code,{children:".ts"})," files to JavaScript"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Dependency resolution"}),": Ensures all imports are resolved"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Plugin packaging"}),": Prepares plugins for testing"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"build-behavior",children:"Build Behavior"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# These commands automatically build before running tests:\nelizaos test           # Builds once for component tests, skips build for e2e\nelizaos test component # Builds before running component tests\nelizaos test e2e       # Builds before running e2e tests\n\n# Skip the automatic build (useful for build troubleshooting):\nelizaos test --skip-build\n"})}),"\n",(0,i.jsx)(s.h3,{id:"when-build-fails",children:"When Build Fails"}),"\n",(0,i.jsx)(s.p,{children:"If the automatic build fails, the test command will:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Log the build error"}),"\n",(0,i.jsx)(s.li,{children:"Warn that it's continuing despite the error"}),"\n",(0,i.jsx)(s.li,{children:"Attempt to run tests anyway (may fail if build artifacts are missing)"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(s.h3,{id:"bun-installation-issues",children:"Bun Installation Issues"}),"\n",(0,i.jsx)(s.p,{children:'If you encounter "command not found: bun" or similar errors:'}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'# For macOS (using curl)\ncurl -fsSL https://bun.sh/install | bash\n\n# For macOS (using Homebrew)  \nbrew install bun\n\n# For Linux (using curl)\ncurl -fsSL https://bun.sh/install | bash\n\n# For Windows (using PowerShell)\npowershell -c "irm bun.sh/install.ps1 | iex"\n\n# After installation, restart your terminal and verify\nbun --version\n'})}),"\n",(0,i.jsx)(s.h3,{id:"component-test-issues",children:"Component Test Issues"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Tests not found - ensure proper file naming\nls __tests__/*.test.ts\n\n# Run specific test file\nelizaos test component --name specific-test\n\n# Skip automatic build if having compilation issues\nelizaos test component --skip-build\n"})}),"\n",(0,i.jsx)(s.h3,{id:"e2e-test-issues",children:"E2E Test Issues"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Port conflicts\nelizaos test e2e --port 4000\n\n# Skip automatic build if having issues\nelizaos test e2e --skip-build\n\n# Runtime initialization failures\nelizaos env list\n"})}),"\n",(0,i.jsx)(s.h3,{id:"build-related-issues",children:"Build-Related Issues"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"# Skip automatic build if having compilation issues\nelizaos test --skip-build\n\n# Clear build artifacts and let test rebuild\nrm -rf dist/ build/\nelizaos test\n"})}),"\n",(0,i.jsx)(s.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/cli/dev",children:(0,i.jsx)(s.code,{children:"dev"})}),": Run in development mode with hot reloading"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/cli/start",children:(0,i.jsx)(s.code,{children:"start"})}),": Start your project for manual testing"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/cli/create",children:(0,i.jsx)(s.code,{children:"create"})}),": Create new projects with test structure"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/cli/env",children:(0,i.jsx)(s.code,{children:"env"})}),": Configure environment variables for testing"]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},71184:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>r});var t=n(14041);const i={},l=t.createContext(i);function o(e){const s=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(l.Provider,{value:s},e.children)}}}]);