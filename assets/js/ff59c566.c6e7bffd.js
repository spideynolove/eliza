"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[76805],{51740:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"namespaces/v2/type-aliases/ComponentData","title":"ComponentData","description":"@elizaos/core v1.0.2 / v2 / ComponentData","source":"@site/api/namespaces/v2/type-aliases/ComponentData.md","sourceDirName":"namespaces/v2/type-aliases","slug":"/namespaces/v2/type-aliases/ComponentData","permalink":"/api/namespaces/v2/type-aliases/ComponentData","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"WorldPayload","permalink":"/api/namespaces/v2/interfaces/WorldPayload"},"next":{"title":"DbConnection","permalink":"/api/namespaces/v2/type-aliases/DbConnection"}}');var a=t(31085),o=t(71184);const i={},r="Type Alias: ComponentData",c={},p=[{value:"Defined in",id:"defined-in",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/api/",children:"@elizaos/core v1.0.2"})," / ",(0,a.jsx)(n.a,{href:"/api/namespaces/v2/",children:"v2"})," / ComponentData"]}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"type-alias-componentdata",children:"Type Alias: ComponentData"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"ComponentData"}),": ",(0,a.jsx)(n.code,{children:"Record"}),"<",(0,a.jsx)(n.code,{children:"string"}),", ",(0,a.jsx)(n.code,{children:"unknown"}),">"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["A generic type for the ",(0,a.jsx)(n.code,{children:"data"})," field within a ",(0,a.jsx)(n.code,{children:"Component"}),".\nWhile ",(0,a.jsx)(n.code,{children:"Record<string, unknown>"})," allows for flexibility, developers are encouraged\nto define more specific types for component data where possible to improve type safety\nand code maintainability. This type serves as a base for various component implementations."]}),"\n",(0,a.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/spideynolove/eliza/blob/main/packages/core/src/specs/v2/types.ts#L2285",children:"packages/core/src/specs/v2/types.ts:2285"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(14041);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);