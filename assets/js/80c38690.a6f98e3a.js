"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[18820],{71184:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(14041);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}},86386:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"cli/dev","title":"Development Mode","description":"Run ElizaOS projects in development mode with hot reloading and debugging","source":"@site/docs/cli/dev.md","sourceDirName":"cli","slug":"/cli/dev","permalink":"/docs/cli/dev","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/develop/packages/docs/docs/cli/dev.md","tags":[],"version":"current","lastUpdatedBy":"Christopher Trimboli","lastUpdatedAt":1749078171000,"sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Development Mode","description":"Run ElizaOS projects in development mode with hot reloading and debugging","keywords":["development","hot reload","debugging","watch mode","local development"],"image":"/img/cli.jpg"},"sidebar":"tutorialSidebar","previous":{"title":"Create","permalink":"/docs/cli/create"},"next":{"title":"Environment","permalink":"/docs/cli/env"}}');var r=i(31085),l=i(71184);const t={sidebar_position:7,title:"Development Mode",description:"Run ElizaOS projects in development mode with hot reloading and debugging",keywords:["development","hot reload","debugging","watch mode","local development"],image:"/img/cli.jpg"},o="Dev Command",c={},d=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Development Mode",id:"basic-development-mode",level:3},{value:"Development with Configuration",id:"development-with-configuration",level:3},{value:"Character File Specification",id:"character-file-specification",level:3},{value:"Combined Options",id:"combined-options",level:3},{value:"Development Features",id:"development-features",level:2},{value:"Auto-Rebuild and Restart",id:"auto-rebuild-and-restart",level:3},{value:"Project Detection",id:"project-detection",level:3},{value:"Development Workflow",id:"development-workflow",level:3},{value:"File Watching Behavior",id:"file-watching-behavior",level:2},{value:"Watched Files",id:"watched-files",level:3},{value:"Watched Directories",id:"watched-directories",level:3},{value:"Ignored Paths",id:"ignored-paths",level:3},{value:"Debouncing",id:"debouncing",level:3},{value:"Project Type Detection",id:"project-type-detection",level:2},{value:"Plugin Detection",id:"plugin-detection",level:3},{value:"Project Detection",id:"project-detection-1",level:3},{value:"Monorepo Support",id:"monorepo-support",level:2},{value:"Development Logs",id:"development-logs",level:2},{value:"Character File Handling",id:"character-file-handling",level:2},{value:"Supported Formats",id:"supported-formats",level:3},{value:"Multiple Characters",id:"multiple-characters",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Build Failures",id:"build-failures",level:3},{value:"Bun Installation Issues",id:"bun-installation-issues",level:3},{value:"File Watching Issues",id:"file-watching-issues",level:3},{value:"Server Restart Problems",id:"server-restart-problems",level:3},{value:"Port Conflicts",id:"port-conflicts",level:3},{value:"Configuration Issues",id:"configuration-issues",level:3},{value:"Related Commands",id:"related-commands",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"dev-command",children:"Dev Command"})}),"\n",(0,r.jsx)(n.p,{children:"Start the project or plugin in development mode with auto-rebuild, detailed logging, and file change detection."}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"elizaos dev [options]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-c, --configure"})}),(0,r.jsx)(n.td,{children:"Reconfigure services and AI models (skips using saved configuration)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-char, --character [paths...]"})}),(0,r.jsx)(n.td,{children:"Character file(s) to use - accepts paths or URLs"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-b, --build"})}),(0,r.jsx)(n.td,{children:"Build the project before starting"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-p, --port <port>"})}),(0,r.jsx)(n.td,{children:"Port to listen on"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-development-mode",children:"Basic Development Mode"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Navigate to your project directory\ncd my-agent-project\n\n# Start development mode\nelizaos dev\n"})}),"\n",(0,r.jsx)(n.h3,{id:"development-with-configuration",children:"Development with Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Start dev mode with custom port\nelizaos dev --port 8080\n\n# Force reconfiguration of services\nelizaos dev --configure\n\n# Build before starting development\nelizaos dev --build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"character-file-specification",children:"Character File Specification"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Single character file\nelizaos dev --character assistant.json\n\n# Multiple character files (space-separated)\nelizaos dev --character assistant.json chatbot.json\n\n# Multiple character files (comma-separated)\nelizaos dev --character "assistant.json,chatbot.json"\n\n# Character file without extension (auto-adds .json)\nelizaos dev --character assistant\n\n# Load character from URL\nelizaos dev --character https://example.com/characters/assistant.json\n'})}),"\n",(0,r.jsx)(n.h3,{id:"combined-options",children:"Combined Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Full development setup\nelizaos dev --port 4000 --character "assistant.json,chatbot.json" --build --configure\n'})}),"\n",(0,r.jsx)(n.h2,{id:"development-features",children:"Development Features"}),"\n",(0,r.jsx)(n.p,{children:"The dev command provides comprehensive development capabilities:"}),"\n",(0,r.jsx)(n.h3,{id:"auto-rebuild-and-restart",children:"Auto-Rebuild and Restart"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"File Watching"}),": Monitors ",(0,r.jsx)(n.code,{children:".ts"}),", ",(0,r.jsx)(n.code,{children:".js"}),", ",(0,r.jsx)(n.code,{children:".tsx"}),", and ",(0,r.jsx)(n.code,{children:".jsx"})," files for changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic Rebuilding"}),": Rebuilds project when source files change"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server Restart"}),": Automatically restarts the server after successful rebuilds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TypeScript Support"}),": Compiles TypeScript files during rebuilds"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"project-detection",children:"Project Detection"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Project Mode"}),": Automatically detects Eliza projects based on package.json configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Plugin Mode"}),": Detects and handles plugin development appropriately"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monorepo Support"}),": Builds core packages when working in monorepo context"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Detects whether you're in a project or plugin directory"}),"\n",(0,r.jsx)(n.li,{children:"Performs initial build (if needed)"}),"\n",(0,r.jsx)(n.li,{children:"Starts the server with specified options"}),"\n",(0,r.jsx)(n.li,{children:"Sets up file watching for source files"}),"\n",(0,r.jsx)(n.li,{children:"Rebuilds and restarts when files change"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"file-watching-behavior",children:"File Watching Behavior"}),"\n",(0,r.jsx)(n.h3,{id:"watched-files",children:"Watched Files"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["TypeScript files (",(0,r.jsx)(n.code,{children:".ts"}),", ",(0,r.jsx)(n.code,{children:".tsx"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["JavaScript files (",(0,r.jsx)(n.code,{children:".js"}),", ",(0,r.jsx)(n.code,{children:".jsx"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"watched-directories",children:"Watched Directories"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Source directory (",(0,r.jsx)(n.code,{children:"src/"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Project root (if no src directory exists)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"ignored-paths",children:"Ignored Paths"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"node_modules/"})," directory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dist/"})," directory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".git/"})," directory"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"debouncing",children:"Debouncing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Changes are debounced with a 300ms delay to prevent rapid rebuilds"}),"\n",(0,r.jsx)(n.li,{children:"Multiple rapid changes trigger only one rebuild cycle"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"project-type-detection",children:"Project Type Detection"}),"\n",(0,r.jsx)(n.p,{children:"The dev command uses intelligent project detection:"}),"\n",(0,r.jsx)(n.h3,{id:"plugin-detection",children:"Plugin Detection"}),"\n",(0,r.jsx)(n.p,{children:"Identifies plugins by checking for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'eliza.type: "plugin"'})," in package.json"]}),"\n",(0,r.jsxs)(n.li,{children:["Package name containing ",(0,r.jsx)(n.code,{children:"plugin-"})]}),"\n",(0,r.jsxs)(n.li,{children:["Keywords: ",(0,r.jsx)(n.code,{children:"elizaos-plugin"})," or ",(0,r.jsx)(n.code,{children:"eliza-plugin"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"project-detection-1",children:"Project Detection"}),"\n",(0,r.jsx)(n.p,{children:"Identifies projects by checking for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'eliza.type: "project"'})," in package.json"]}),"\n",(0,r.jsxs)(n.li,{children:["Package name containing ",(0,r.jsx)(n.code,{children:"project-"})," or ",(0,r.jsx)(n.code,{children:"-org"})]}),"\n",(0,r.jsxs)(n.li,{children:["Keywords: ",(0,r.jsx)(n.code,{children:"elizaos-project"})," or ",(0,r.jsx)(n.code,{children:"eliza-project"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/index.ts"})," with Project export"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"monorepo-support",children:"Monorepo Support"}),"\n",(0,r.jsx)(n.p,{children:"When running in a monorepo context, the dev command:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Builds Core Packages"}),": Automatically builds essential monorepo packages:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"packages/core"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"packages/client"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"packages/plugin-bootstrap"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Dependency Resolution"}),": Ensures proper build order for dependencies"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Change Detection"}),": Monitors both core packages and current project for changes"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-logs",children:"Development Logs"}),"\n",(0,r.jsx)(n.p,{children:"The dev command provides detailed logging:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Project detection\n[info] Running in project mode\n[info] Package name: my-agent-project\n\n# Build process\n[info] Building project...\n[success] Build successful\n\n# Server management\n[info] Starting server...\n[info] Stopping current server process...\n\n# File watching\n[info] Setting up file watching for directory: /path/to/project\n[success] File watching initialized in: /path/to/project/src\n[info] Found 15 TypeScript/JavaScript files in the watched directory\n\n# Change detection\n[info] File event: change - src/index.ts\n[info] Triggering rebuild for file change: src/index.ts\n[info] Rebuilding project after file change...\n[success] Rebuild successful, restarting server...\n"})}),"\n",(0,r.jsx)(n.h2,{id:"character-file-handling",children:"Character File Handling"}),"\n",(0,r.jsx)(n.h3,{id:"supported-formats",children:"Supported Formats"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Local files"}),": Relative or absolute paths"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URLs"}),": HTTP/HTTPS URLs to character files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extension optional"}),": ",(0,r.jsx)(n.code,{children:".json"})," extension is automatically added if missing"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"multiple-characters",children:"Multiple Characters"}),"\n",(0,r.jsx)(n.p,{children:"Multiple character files can be specified using:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Space separation: ",(0,r.jsx)(n.code,{children:"file1.json file2.json"})]}),"\n",(0,r.jsxs)(n.li,{children:["Comma separation: ",(0,r.jsx)(n.code,{children:'"file1.json,file2.json"'})]}),"\n",(0,r.jsxs)(n.li,{children:["Mixed format: ",(0,r.jsx)(n.code,{children:'"file1.json, file2.json"'})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"build-failures",children:"Build Failures"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# If initial build fails\n[error] Initial build failed: Error message\n[info] Continuing with dev mode anyway...\n\n# Check for TypeScript errors\nbun i && bun run build\n\n# Try dev mode with explicit build\nelizaos dev --build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"bun-installation-issues",children:"Bun Installation Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# If you see "bun: command not found" errors\n# Install Bun using the appropriate command for your system:\n\n# Linux/macOS:\ncurl -fsSL https://bun.sh/install | bash\n\n# Windows:\npowershell -c "irm bun.sh/install.ps1 | iex"\n\n# macOS with Homebrew:\nbrew install bun\n\n# After installation, restart your terminal or:\nsource ~/.bashrc  # Linux\nsource ~/.zshrc   # macOS with zsh\n\n# Verify installation:\nbun --version\n'})}),"\n",(0,r.jsx)(n.h3,{id:"file-watching-issues",children:"File Watching Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# If file changes aren't detected\n[warn] No directories are being watched! File watching may not be working.\n\n# Check if you're in the right directory\npwd\nls src/\n\n# Verify file types being modified (.ts, .js, .tsx, .jsx)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"server-restart-problems",children:"Server Restart Problems"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# If server doesn't restart after changes\n[warn] Failed to kill server process, trying force kill...\n\n# Manual restart\n# Press Ctrl+C to stop, then restart:\nelizaos dev\n"})}),"\n",(0,r.jsx)(n.h3,{id:"port-conflicts",children:"Port Conflicts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# If default port is in use\n[error] Port 3000 already in use\n\n# Use different port\nelizaos dev --port 8080\n"})}),"\n",(0,r.jsx)(n.h3,{id:"configuration-issues",children:"Configuration Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# If having configuration problems\nelizaos dev --configure\n\n# Check environment setup\nelizaos env list\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/start",children:(0,r.jsx)(n.code,{children:"start"})}),": Start your project in production mode"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/test",children:(0,r.jsx)(n.code,{children:"test"})}),": Run tests for your project"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/env",children:(0,r.jsx)(n.code,{children:"env"})}),": Configure environment variables for development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/create",children:(0,r.jsx)(n.code,{children:"create"})}),": Create new projects with development structure"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);